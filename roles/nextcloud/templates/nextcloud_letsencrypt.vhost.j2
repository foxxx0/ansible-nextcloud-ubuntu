upstream php-handler {
	server unix:/run/php/nextcloud-fpm.sock;
}

server {
	listen {{ ansible_default_ipv4.address }}:80;
	listen [{{ ansible_default_ipv6.address | default("::1") }}]:80;
	server_name {{ nextcloud.domain }};

	include snippets/letsencrypt.conf;

	# enforce https
	return 301 https://$server_name$request_uri;
}

server {
	listen {{ ansible_default_ipv4.address }}:443 ssl;
	listen [{{ ansible_default_ipv6.address | default("::1") }}]:443 ssl;
	server_name {{ nextcloud.domain }};

	root {{ nextcloud_DocRoot }};

	access_log /var/log/nginx/nextcloud_access.log;
	error_log /var/log/nginx/nextcloud_error.log error;

	ssl_certificate     /etc/letsencrypt/live/{{ nextcloud.domain }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ nextcloud.domain }}/privkey.pem;

	include snippets/sslsettings.conf;

	# security headers
	add_header X-Content-Type-Options nosniff;
	add_header X-Frame-Options "SAMEORIGIN";
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag none;
	add_header X-Download-Options noopen;
	add_header X-Permitted-Cross-Domain-Policies none;

	# before enabling HSTS please read into this
	# add_header Strict-Transport-Security "max-age=15768000; includeSubDomains;";

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# DAV settings
	location = /.well-known/carddav {
		return 301 $scheme://$host/remote.php/dav;
	}
	location = /.well-known/caldav {
		return 301 $scheme://$host/remote.php/dav;
	}

	# max upload size
	client_max_body_size 512M;
	fastcgi_buffers 64 4K;

	# Disable gzip to avoid the removal of the ETag header
	gzip off;
	
	# Uncomment if your server is build with the ngx_pagespeed module
	# This module is currently not supported.
	#pagespeed off;
	
	error_page 403 /core/templates/403.php;
	error_page 404 /core/templates/404.php;
	
	location / {
		rewrite ^ /index.php$uri;
	}
	
	location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
		deny all;
	}
	location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
		deny all;
	}
	
	location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) {
		include fastcgi_params;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param HTTPS on;
		#Avoid sending the security headers twice
		fastcgi_param modHeadersAvailable true;
		fastcgi_param front_controller_active true;
		fastcgi_pass php-handler;
		fastcgi_intercept_errors on;
		fastcgi_request_buffering off;
	}
	
	location ~ ^/(?:updater|ocs-provider)(?:$|/) {
		try_files $uri/ =404;
		index index.php;
	}
	
	# Adding the cache control header for js and css files
	# Make sure it is BELOW the PHP block
	location ~* \.(?:css|js)$ {
		try_files $uri /index.php$uri$is_args$args;
		add_header Cache-Control "public, max-age=7200";
		add_header X-Content-Type-Options nosniff;
		add_header X-Frame-Options "SAMEORIGIN";
		add_header X-XSS-Protection "1; mode=block";
		add_header X-Robots-Tag none;
		add_header X-Download-Options noopen;
		add_header X-Permitted-Cross-Domain-Policies none;

		# before enabling HSTS please read into this
		# add_header Strict-Transport-Security "max-age=15768000; includeSubDomains;";

		# Optional: Don't log access to assets
		# access_log off;
	}
	
	location ~* \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg)$ {
		try_files $uri /index.php$uri$is_args$args;

		# Optional: Don't log access to other assets
		# access_log off;
	}
}
