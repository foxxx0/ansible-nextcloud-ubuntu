---

- name: add nextcloud postgres db
  postgresql_db: db=nextcloud
  become: yes
  become_user: postgres

- name: add nextcloud postgres user
  postgresql_user: db=nextcloud name=nextcloud password={{ postgres_users.nextcloud }}
  become: yes
  become_user: postgres

- name: download nextcloud tarball
  get_url: url=https://download.nextcloud.com/server/releases/nextcloud-{{ nextcloud_version }}.tar.bz2 dest=/tmp/nextcloud-{{ nextcloud_version }}.tar.bz2

# nextcloud archive extracts to ./nextcloud so we omit that last part
- name: extract nextcloud tarball
  unarchive: src=/tmp/nextcloud-{{ nextcloud_version }}.tar.bz2
             dest={{ nextcloud_DocRoot | dirname }}
             copy=no

- name: ensure root directories
  file: path={{ item }} state=directory owner=www-data group=www-data mode=0750
  with_items:
    - "{{ nextcloud_DocRoot }}"
    - "{{ nextcloud_DataDir }}"

- name: ensure root directory ownership
  file: path={{ item }} state=directory owner=www-data group=www-data recurse=yes
  with_items:
    - "{{ nextcloud_DocRoot }}"
    - "{{ nextcloud_DataDir }}"

- name: configure nextcloud nginx vhost
  template: src=nextcloud.vhost.j2 dest=/etc/nginx/sites-available/nextcloud owner=root group=root mode=0644
  notify:
    - restart nginx
  when: not use_letsencrypt

- name: configure nextcloud nginx vhost
  template: src=nextcloud.vhost.j2 dest=/etc/nginx/sites-available/nextcloud owner=root group=root mode=0644
  notify:
    - restart nginx and obtain cert
  when: use_letsencrypt

- name: activate nextcloud nginx vhost
  file: src=/etc/nginx/sites-available/nextcloud dest=/etc/nginx/sites-enabled/nextcloud state=link
  notify:
    - restart nginx

- name: disable default nginx vhost
  file: path=/etc/nginx/sites-enabled/default state=absent
  notify:
    - restart nginx

- name: remove default php-fpm pool
  file: path=/etc/php/{{ php_version }}/fpm/pool.d/www.conf state=absent
  notify:
    - restart php-fpm

- name: configure nextcloud php-fpm pool
  copy: src=nextcloud-fpm.conf dest=/etc/php/{{ php_version }}/fpm/pool.d/nextcloud.conf owner=root group=root mode=0644
  notify:
    - restart php-fpm

- name: make nextcloud installer executable
  file: path={{ nextcloud_DocRoot}}/occ owner=www-data group=www-data mode=0750

- name: run nextcloud installer
  command: '{{ nextcloud_DocRoot }}/occ maintenance:install --no-interaction --data-dir "{{ nextcloud_DataDir }}" --database "{{ nextcloud.dbtype }}" --database-name "nextcloud" --database-user "nextcloud" --database-pass "{{ postgres_users.nextcloud }}" --admin-user "{{ nextcloud.admin_user }}" --admin-pass "{{ nextcloud.admin_pass }}"'
  args:
    chdir: "{{ nextcloud_DocRoot }}"
  become: yes
  become_user: www-data

- name: configure nextcloud
  template: src=nextcloud-config.php.j2 dest={{ nextcloud_DocRoot }}/config/config.php owner=www-data group=www-data mode=0640

- name: add unique index to oc_appconfig(appid,configkey) for UPSERT queries
  command: "psql nextcloud -c \"SET ROLE nextcloud; CREATE UNIQUE INDEX idx_oc_appconfig_appid_configkey ON oc_appconfig(appid,configkey);\""
  become: yes
  become_user: postgres

- name: upload nextcloud login-page image
  copy: src=nc_login_page_bg.jpg dest=/var/lib/nextcloud/themedbackgroundlogo owner=www-data group=www-data mode=0640

- name: set nextcloud login-page image
  command: "psql nextcloud -c \"SET ROLE nextcloud; INSERT INTO oc_appconfig(appid,configkey,configvalue) VALUES ('theming','backgroundMime','image/jpeg') ON CONFLICT (appid,configkey) DO UPDATE SET configvalue='image/jpeg';\""
  become: yes
  become_user: postgres
  when: nextcloud.custom_bgImage

- name: set nextcloud login-page name
  command: "psql nextcloud -c \"SET ROLE nextcloud; INSERT INTO oc_appconfig(appid,configkey,configvalue) VALUES ('theming','name','{{ nextcloud.name }}') ON CONFLICT (appid,configkey) DO UPDATE SET configvalue='{{ nextcloud.name }}';\""
  become: yes
  become_user: postgres

- name: set nextcloud login-page slogan
  command: "psql nextcloud -c \"SET ROLE nextcloud; INSERT INTO oc_appconfig(appid,configkey,configvalue) VALUES ('theming','slogan','{{ nextcloud.slogan }}') ON CONFLICT (appid,configkey) DO UPDATE SET configvalue='{{ nextcloud.slogan }}';\""
  become: yes
  become_user: postgres

- name: set nextcloud login-page url
  command: "psql nextcloud -c \"SET ROLE nextcloud; INSERT INTO oc_appconfig(appid,configkey,configvalue) VALUES ('theming','url','http://{{ nextcloud.domain }}') ON CONFLICT (appid,configkey) DO UPDATE SET configvalue='http://{{ nextcloud.domain }}';\""
  become: yes
  become_user: postgres
